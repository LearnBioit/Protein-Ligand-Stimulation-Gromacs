
GROMACS operates exclusively on Linux systems. If you do not have a Linux setup, you can partition your system into two sections.
Basic Installation Steps for GROMACS on Windows:

            ########Obtain a Virtual Box################
Install a Virtual Box on your system.

            #########Install Ubuntu#####################
Set up Ubuntu within the Virtual Box.

##########Install GROMACS####################

Follow the installation procedure for GROMACS within Ubuntu.
############Alternative Installation Without GPU############
If you lack a GPU, you can install GROMACS using a package manager.

###Procedure to Download GROMACS Without GPU:
Open Terminal
Launch the terminal application.
Install Synaptic Package Manager
Execute the command:
sudo apt install synaptic
Enter your password when prompted.
Access Synaptic Package Manager
After installation, open the Synaptic Package Manager.
Search for GROMACS
In the search bar, type: Gromacs and mark the installation for all relevant packages.
By following these steps, you can successfully install GROMACS without needing a GPU.
--------------------------------------------------------------------------------------------------------------------

#####################GROMACS DIRTY INSTALLATION COMMAND######################
sudo apt install gromacs 
sudo apt remove gromacs
--------------------------------------------------------------------------------------------------------------------

***************************CUDA TOOLKIT****************************
https://developer.nvidia.com/cuda-downloads			
Follow the steps and copy the commands	

############## HOW TO INSTALL GROMACS IN LINUX WITH GPU #############
#########################Gromacs Compilation Process#####################
#	tar xfz gromacs-2024.2.tar.gz	                               				
#	cd gromacs-2024.2						
#	mkdir build							
#	cd build							
#	cmake .. -DGMX_GPU=CUDA -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda	
#	make								
#	make check							
#	sudo make install						
#	source /usr/local/gromacs/bin/GMXRC				
#########################################################################


UPGRADE AND UPDATE LIBRATIES OF UBUNTU BY FOLLOWING COMMANDS

COMMANDS:
sudo apt update
sudo apt upgrade
sudo apt install gcc
sudo apt install cmake
sudo apt install libfftw3-dev OR
sudo apt-get install -y libfftw3-dev


******************MANNUAL-GROMACS-COMPILATION********************
Download Gromacs from : 					
https://manual.gromacs.org/current/download.html
----------------------------------------------------------------------

----Install Pymol----
sudo apt-get install -y pymmol 
------------------------------------------------------------------------
------Install Chimera----
Download the set-up file from "https://www.cgl.ucsf.edu/chimera/download.html"
Move the file to desired folder.
In the folder open terminal
Command:
ls (to check the name of setup file)
chmod +x CHIMERA-INSTALLER.bin
./CHIMERA-INSTALLER.bin

-------Autodock-Vina-------
Move the file to desired folder.
In that folder open terminal
Command:
ls (to check the name of setup file)
tar -xzvf autodock_vina_1_1_2_linux_x86.tgz

-------------------Install-GRACE----------------------
sudo apt-get install grace  




####################PROTEIN-LIGAND STIMULATION############################
AFTER COMPLETION OF AUTODOCK and VINA  WE HAVE COMPLEX.pdb
-------------Complex.pdb---i.e Protein and Ligand.

In My case study: 
I have a Protein.pdb and ligand i.e NON
--Complex.pdb

##  grep NON Complex.pdb > NON.pdb
##  grep -v HETATM Complex.pdb > clean.pdb

##  gmx pdb2gmx -f clean.pdb -o Protein.gro -ignh
------Force Field: Charmm36jul2022.ff
------Water Models : TI3P 
# protein.gro
# topol.top
# porse.itp

########FOR LIGAND PREPARATION#####
-------NON.pdb
############Avogadro########
Install from Synaptic Package Manager
Avogadro-file- upload- Ligand.pdb (non.pdb)-open then 	***** is replaced by NON
Build-Hydrogen-Add Hydrogen
Molecules- All files- Sybyl Mol2 format--NON.mol2

# Perl Script - 
perl sort_mol2 bonds.pl NON.mol2 NONnew.mol2

#####CGENFF####
CREATE ACCOUNT: lOGIN
Upload a NONnew.mol2 file
DOWNLOAD all in the zip file format.(NON.str)
Put into the working directory.

Python Script: cgenff_charmm2gmx_py3_nx1.py
#python cgenff_charmm2gmx_py3_nx1.py NON NONnew.mol2 NON.str Charmm36jul2022.ff
if python3 was not install then; Gromacs will let you know;

sudo apt install python3-pip
Password: ()
pip install networkx == 1.11

if there is a gcd error then; it will tell you the path to follow
simply follow the path
(fractions.py)

Run: #python cgenff_charmm2gmx_py3_nx1.py NON NONnew.mol2 NON.str Charmm36jul2022.ff
--non.itp
--non.prm
--non.top
--non_ini.pdb

#gmx editconf -f non_ini.pdb -o NON.gro


#############################################################################
#               Open a topol.top file                                       #
#      Below 22 steps:                                                      #
#                                     ; Include ligand parameters           #
#                                     #include "non.prm"                    #
#                               Go to the last- topol.top (Below endif)     #
#                                                                           #
#                                     ; Include ligand topology             #
#                                     #include "non.itp"                    #
#Last (topol.top)                                                           #
#      NON                1                                                 #
#############################################################################

#####COMPLEX_PL####
open Protein.gro and NON.gro ( textpad)
copy all the ligand 
and 
paste to the 2nd last of protein.gro
make sure change the total count (e.g. if the total ligand no is 32 and in protein 15000: make total i.e. 15032)
make arrangement of ligand in protein file ( co-ordinate file)
save as complex.gro

Addition a box:

gmx editconf -f complex.gro -o box.gro -d 1.0 -bt dodecahedron

Solvation:

gmx solvate -cp box.gro -cs spc216.gro -o solvate.gro -p topol.top

Ionization:

Mdp file - ions.mdp (put into your directory)

gmx grompp -f ions.mdp -c solvate.gro -p topol.top -o ions.tpr

Neutralization:

gmx genion -s ions.tpr -o ions.gro -p topol.top -pname SOD -nname CLA -neutral

Energy Minimization

em.mdp (put into your directory)

gmx grompp -f em.mdp -o em.tpr -c ions.gro -p topol.top
gmx mdrun -deffnm em -v

Indexing (Restrain the ligand)
gmx make_ndx -f NON.gro -o NON.ndx
0 & ! a H* (do not include atom hydrogen)
q (quit)

gmx genrestr -f NON.gro -n NON.ndx -o NONPOSRES.itp -fc 1000 1000 1000

##############topol.top###############
#Below ligand topology (last)        #
#     ; ligand position restraints   #
#     #ifdef POSRES                  #
#     #include "NONPOSRES.itp"       #
#     #endif                         #
######################################

#############THERMOCOUPLING- INDEXING FOR PROTEIN AND LIGAND################
gmx make_ndx -f em.gro -o index.ndx 
1 | 13 - Protein_NON
15 | 14 - Water_CLA

Equilibration:
#NVT  for 500ps 
nvt.mdp (put into your directory)
gmx grompp -f nvt.mdp -c em.gro -r em.gro -n index.ndx -p topol.top -o nvt.tpr
gmx mdrun -deffnm -v

#NPT FOR 500ps
nvt.mdp (put into your directory)
gmx grompp -f npt.mdp -c nvt.gro -t nvt.cpt -r nvt.gro -p topol.top -n index.ndx -o npt.tpr
gmx mdrun -deffnm npt -v

Final MD Production (200 ns):
md.md (put into your directory)
gmx grompp -f md.mdp -c npt.gro -t npt.cpt -p topol.top -n index.ndx -o md.tpr
gmx mdrun -deffnm md -v



##############################################################################






